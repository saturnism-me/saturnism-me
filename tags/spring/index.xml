<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring on Ray Tsang</title>
    <link>https://saturnism.me/tags/spring/</link>
    <description>Recent content in Spring on Ray Tsang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 14 Jan 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://saturnism.me/tags/spring/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Developing Backends with Kotlin and Spring Boot on Google Cloud</title>
      <link>https://saturnism.me/talk/developing-backends-kotlin-google-cloud/</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/developing-backends-kotlin-google-cloud/</guid>
      <description>Abstract Join this talk to learn how you can quickly create a Kotlin backend service using Spring Boot, and use Spring Cloud GCP to leverage many of the useful Google Cloud services for database, storage, and observability in minutes. These services are fully managed, so you don&amp;rsquo;t need to spend any time setting up and managing new infrastructure. Instead, you can just focus on the code. When the backend is ready, we&amp;rsquo;ll deploy it to our serverless platform, where your backend service can automatically scale up the number of instances based on load, but can also scale down to zero instances when no one is using it.</description>
    </item>
    
    <item>
      <title>Lessons Learned Implementing Microservices in Kubernetes</title>
      <link>https://saturnism.me/talk/kubernetes-microservices-lessons-learned/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/kubernetes-microservices-lessons-learned/</guid>
      <description>Abstract Ray has been on a 6-months rotation with an internal Google team to help bringing a project to public Cloud using cloud-native technology stack and Kubernetes. Ray will share the architecture, development environment technicals, devops tools, and some tough decisions that needed to be made to move the project along while being prepared for changes in the future. This session to learn the journey including development environment tools choices (Docker Compose, Skaffold, Kustomize, Jib), to the stack (Gradle, Spring Boot, Kafka, PostgreSQL, gRPC, gRPC-Web), to mono-repo vs multi-repo, to the runtime infrastructure (Kubernetes, Istio, Prometheus, Grafana).</description>
    </item>
    
    <item>
      <title>Spring (or Java) to Kubernetes Faster and Easier</title>
      <link>https://saturnism.me/talk/kubernetes-spring-java-best-practices/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/kubernetes-spring-java-best-practices/</guid>
      <description>Abstract For Spring and Java developers, building containers is a common obstacle on the road to Kubernetes adoption. Traditionally, Dockerfiles define container builds imperatively, but can also be cumbersome, error-prone, and slow. The development cycle can be slow. IDE support is generally poor. Most likely, your Java application will crash with an OOMKill message.
In this talk, we&amp;rsquo;ll introduce tools and best practices to help you adopt Kubernetes faster and easier.</description>
    </item>
    
    <item>
      <title>Effective Cloud Native Spring Boot on Kubernetes &amp; Google Cloud Platform</title>
      <link>https://saturnism.me/talk/google-cloud-native-spring-boot-kubernetes/</link>
      <pubDate>Wed, 10 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/google-cloud-native-spring-boot-kubernetes/</guid>
      <description>Abstract Enterprises are moving applications to the cloud to increase operational agility. However, most of the migrations are lift and shift that don&amp;rsquo;t really take full advantage of Cloud services. Google Cloud Platform is the first to bring awesome end-to-end experiences for Java application development, from writing with the most popular framework, Spring and Spring Boot, to plugins for Maven, Gradle, Eclipse, and IntelliJ, and to deployment options for PaaS, containers, and more.</description>
    </item>
    
    <item>
      <title>Google Cloud Native with Spring Boot</title>
      <link>https://saturnism.me/talk/google-cloud-native-spring-boot/</link>
      <pubDate>Thu, 26 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/google-cloud-native-spring-boot/</guid>
      <description>Abstract Spring Framework and Spring Boot have made huge strides in making it easier than ever to develop the next generation of cloud native applications. Importantly, a number of Spring projects provide cloud-vendor agnostic abstractions to developers so that with a simple configuration switch, you&amp;rsquo;re able to move your local application to run in an on prem datacenter or in the cloud with managed services.
Google and Pivotal partnered to develop Spring Cloud adapters for Google Cloud Platform.</description>
    </item>
    
    <item>
      <title>JHipster for Google Cloud Platform</title>
      <link>https://saturnism.me/talk/jhipster-gcp/</link>
      <pubDate>Thu, 21 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/jhipster-gcp/</guid>
      <description>Abstract Ray Tsang from Google contributed a couple of generators for JHipster, including the initial Kubernetes support, Istio support, and Google App Engine support. In this session, we&amp;rsquo;ll see how to use these generators to quickly create and deploy JHipster applications into these environments. We&amp;rsquo;ll also look at the latest work being done on thin microservices architecture such that circuit breakers, retries, load balancing and more are delegated to Istio.</description>
    </item>
    
    <item>
      <title>Serverless Kotlin with App Engine</title>
      <link>https://saturnism.me/talk/serverless-kotlin-appengine/</link>
      <pubDate>Sun, 03 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/serverless-kotlin-appengine/</guid>
      <description>Abstract After years of development of a new security sandbox, App Engine Standard now supports Java 8 and practically all of the JVM languages that runs atop of standard OpenJDK 8. In the new sandbox environment, we removed the Java security sandbox and the classes whitelist; this allows developers to use all features in the JVM and still being protected within a secure environment.
App Engine can now support powerful frameworks like Spring Boot, Dropwizard with all the Java 8 language features.</description>
    </item>
    
  </channel>
</rss>