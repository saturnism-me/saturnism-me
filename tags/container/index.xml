<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Container on Ray Tsang</title>
    <link>https://saturnism.me/tags/container/</link>
    <description>Recent content in Container on Ray Tsang</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://saturnism.me/tags/container/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lessons Learned Implementing Microservices in Kubernetes</title>
      <link>https://saturnism.me/talk/kubernetes-microservices-lessons-learned/</link>
      <pubDate>Wed, 18 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/kubernetes-microservices-lessons-learned/</guid>
      <description>Abstract Ray has been on a 6-months rotation with an internal Google team to help bringing a project to public Cloud using cloud-native technology stack and Kubernetes. Ray will share the architecture, development environment technicals, devops tools, and some tough decisions that needed to be made to move the project along while being prepared for changes in the future. This session to learn the journey including development environment tools choices (Docker Compose, Skaffold, Kustomize, Jib), to the stack (Gradle, Spring Boot, Kafka, PostgreSQL, gRPC, gRPC-Web), to mono-repo vs multi-repo, to the runtime infrastructure (Kubernetes, Istio, Prometheus, Grafana).</description>
    </item>
    
    <item>
      <title>Spring (or Java) to Kubernetes Faster and Easier</title>
      <link>https://saturnism.me/talk/kubernetes-spring-java-best-practices/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/kubernetes-spring-java-best-practices/</guid>
      <description>Abstract For Spring and Java developers, building containers is a common obstacle on the road to Kubernetes adoption. Traditionally, Dockerfiles define container builds imperatively, but can also be cumbersome, error-prone, and slow. The development cycle can be slow. IDE support is generally poor. Most likely, your Java application will crash with an OOMKill message.
In this talk, we&amp;rsquo;ll introduce tools and best practices to help you adopt Kubernetes faster and easier.</description>
    </item>
    
    <item>
      <title>Docker Tips and Tricks</title>
      <link>https://saturnism.me/talk/docker-tips-and-tricks/</link>
      <pubDate>Wed, 04 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/docker-tips-and-tricks/</guid>
      <description>Abstract Everyone is talking about containers—but be aware! It takes discipline to use container technology. It may not be as secure nor as optimal as you thought it would be. Although it’s relatively easy to create a new immutable container image to run everywhere, you may have fallen into many of the caveats. Is it running as the root user? Why are the images taking so much space? Why did your containers run out of space in the first place!</description>
    </item>
    
    <item>
      <title>Micro-datacenter with Raspberry Pi and Kubernetes</title>
      <link>https://saturnism.me/talk/micro-datacenter-raspberry-pi-kubernetes/</link>
      <pubDate>Sun, 31 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/micro-datacenter-raspberry-pi-kubernetes/</guid>
      <description>Abstract Kubernetes is a powerful, open source, container orchestration / cluster management tool created by Google. It drew upon all the lessons learned from a near-decade of using containers at Google. Kubernetes handles a number of failure scenarios gracefully, from a crashed process, to a failure of a cluster node. We&amp;rsquo;ll show this through a real Raspberry Pi computing cluster that runs Kubernetes - and play a real-life chaos monkey by pulling the plugs!</description>
    </item>
    
    <item>
      <title>Kubernetes API In-Depth with a Custom Autoscaler</title>
      <link>https://saturnism.me/talk/kubernetes-api-custom-autoscaler/</link>
      <pubDate>Sat, 30 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/kubernetes-api-custom-autoscaler/</guid>
      <description>Abstract Kubernetes is a powerful, open source, container orchestration / cluster management tool created by Google. It drew upon all the lessons learned from a near-decade of using containers at Google. In this session, we&amp;rsquo;ll look beyond container orchestration with Kubernetes, but also taking a deep dive into more advanced feature such as autoscaling. But its most powerful feature is its versatile REST API which you can use to tailor Kubernetes to your needs.</description>
    </item>
    
    <item>
      <title>Deploying &amp; Managing Microservices with Containers and Kubernetes</title>
      <link>https://saturnism.me/talk/microservices-containers-kubernetes/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://saturnism.me/talk/microservices-containers-kubernetes/</guid>
      <description>Abstract A quick overview on Docker containers, usages, and how to scale up from a single container to a fleet of containers working together with Kubernetes for real-life workloads, such as running java-based applications! Join this session to see how to use Kubernetes to launch, manage, and rolling-upgrade a fleet of Java application instances with session replication.
Kubernetes builds on top of Docker to construct a clustered container scheduling service.</description>
    </item>
    
  </channel>
</rss>